name: CI Pipeline

on:
  push:
    branches:
      - main
      - preprod
      - uat
  workflow_dispatch:


jobs:
  build-uat:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/uat'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: ./.github/workflows/setup-java.yml
      - name: Build UAT
        run: ./gradlew assembleUat
      - name: Store APK
        run: mkdir -p artifact_output && mv app/build/outputs/apk/uat/*.apk artifact_output
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: uat-apk
          path: artifact_output/*.apk

  build-preprod:
    runs-on: ubuntu-latest
    needs: setup-android
    if: github.ref == 'refs/heads/preprod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: ./.github/workflows/setup-java.yml
      - name: Build PreProd
        run: ./gradlew assemblePreprod
      - name: Store APK
        run: mkdir -p artifact_output && mv app/build/outputs/apk/preprod/*.apk artifact_output
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: preprod-apk
          path: artifact_output/*.apk

  build-release:
    runs-on: ubuntu-latest
    needs: setup-android
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: ./.github/workflows/setup-java.yml
      - name: Build Release
        run: ./gradlew assembleRelease
      - name: Store APK
        run: mkdir -p artifact_output && mv app/build/outputs/apk/release/*.apk artifact_output
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: artifact_output/*.apk

  deploy-uat:
    runs-on: ubuntu-latest
    needs: build-uat
    if: github.ref == 'refs/heads/uat'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: uat-apk
          path: artifact_output
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Deploy to Firebase
        run: |
          APK_PATH=$(find artifact_output/ -name "*.apk" -print -quit)
          if [ -f "$APK_PATH" ]; then firebase appdistribution:distribute "$APK_PATH" --app ${{ secrets.FIREBASE_APP_ID_UAT }} --release-notes "UAT Release" --groups "pthws-test" --token "${{ secrets.FIREBASE_TOKEN }}"; fi

  deploy-preprod:
    runs-on: ubuntu-latest
    needs: build-preprod
    if: github.ref == 'refs/heads/preprod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: preprod-apk
          path: artifact_output
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Deploy to Firebase
        run: |
          APK_PATH=$(find artifact_output/ -name "*.apk" -print -quit)
          if [ -f "$APK_PATH" ]; then firebase appdistribution:distribute "$APK_PATH" --app ${{ secrets.FIREBASE_APP_ID_PREPROD }} --release-notes "PreProd Release" --groups "pthws-test" --token "${{ secrets.FIREBASE_TOKEN }}"; fi

  deploy-release:
    runs-on: ubuntu-latest
    needs: build-release
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk
          path: artifact_output
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Deploy to Firebase
        run: |
          APK_PATH=$(find artifact_output/ -name "*.apk" -print -quit)
          if [ -f "$APK_PATH" ]; then firebase appdistribution:distribute "$APK_PATH" --app ${{ secrets.FIREBASE_APP_ID_RELEASE }} --release-notes "Production Release" --groups "pthws-test" --token "${{ secrets.FIREBASE_TOKEN }}"; fi
